/* script.js */
(() => {
  'use strict';

// Parallax effect: update CSS variable on scroll
window.addEventListener('scroll', () => {
  const parallaxSpeed = 0.5;
  const offset = window.scrollY * parallaxSpeed;
  document.documentElement.style.setProperty('--parallax-offset', `${offset}px`);
});


  // Translation Data for English and Arabic
  const translations = {
    en: {
      nav: {
        home: "Home",
        about: "About Me",
        projects: "Projects",
        courses: "Courses & Events",
        github: "GitHub Projects",
        experience: "Experience",
        contact: "Contact"
      },
      header: {
        title: "Abdulaziz Al-Rabiah",
	subtitle: "Assistant Analyst (Technologies & Solutions Operations) at the Digital Government Authority",
        contact: "üìû +966550480974 | ‚úâÔ∏è abdulaziz_alrabiah@outlook.sa"
      },
      hero: {
        cta: "Discover More",
        downloadCV: "Download CV"
      },
      about: {
        title: "About Me",
        summaryTitle: "Summary",
        summary: "My robust academic background and technical skills enable me to excel in dynamic, collaborative work environments. I contribute to company success by applying my expertise and continuously expanding my abilities through hands-on experience and challenging projects that foster both personal and professional growth.",
        educationTitle: "Education",
        educationText: "<strong>BEng Software Engineering</strong> ‚Äì Queen's University Belfast, Second Class Honours",
        educationList: [
          "2021/22: Databases, OOP, Software Design Principles, Architecture & Networks, Procedural Programming",
          "2022/23: Software Engineering & Systems Development, Data Structures & Algorithms, Intro to AI & ML, Service‚ÄëOriented Programming, Professional Skills",
          "2023/24: Software Testing, Software Engineering Project, Cloud Computing, Secure Software Development, Team‚ÄëBased Innovation"
        ],
        skillsTitle: "Skills",
        skillsText: "<strong>Soft Skills:</strong> Teamwork, Communication, Problem Solving, Critical Thinking<br /><strong>Technical Skills:</strong> Windows, Kali Linux, Java, C++, Python, SQL, MySQL, HTML, CSS, Microsoft Office, Figma, SQL Server, IntelliJ IDEA, Visual Studio, Qt Creator",
        interestsTitle: "Interests",
        interestsText: "I am enthusiastic about applying technology and innovation to drive progress. I stay updated on industry trends and continually explore new tools and approaches to enhance my skills."
      },
      projects: {
        title: "Projects",
        filters: {
          all: "All",
          personal: "Personal Project",
          university: "University",
          military: "RAST"
        },
        showMore: "Show More",
        showLess: "Show Less",
        technologiesLabel: "Technologies:",
        projectCards: [
          {
            title: "Arresting System Control Software",
            subtitle: "Military Application",
            description: "A custom control interface for a military aircraft arresting system featuring dynamic status lights and real‚Äëtime monitoring.",
            technologies: "Kotlin, Android studio, UI Design",
            category: "military"
          },
          {
            title: "Arresting System testing App",
            subtitle: "Personal Project",
            description: "A desktop-based application that is connected to the arresting system tablet via ip to test and simulate arresting system statuses and send the testing data in bytes using Python and Tkinter.",
            technologies: "Python, Tkinter, PyQt",
            category: "personal"
          },
          {
            title: "QR Code Generator",
            subtitle: "Personal Project",
            description: "An application that generates, customizes, saves, and scans QR codes with robust error handling.",
            technologies: "Python, Tkinter",
            category: "personal"
          },
          {
            title: "Database Project",
            subtitle: "University Project",
            description: "A relational database built with MySQL using a provided schema, enforcing constraints and enabling data extraction via SQL.",
            technologies: "MySQL, SQL, phpMyAdmin",
            category: "university"
          },
          {
            title: "Software Design Principles",
            subtitle: "University Project",
            description: "A simulation of a vending machine system with multiple user roles using Agile methodologies and managing sprint and product backlogs.",
            technologies: "Agile, Teamwork, Software Design",
            category: "university"
          },
          {
            title: "AI & Machine Learning Project",
            subtitle: "University Project",
            description: "Optimized machine learning models in R for image classification using logistic regression, KNN, and random forests.",
            technologies: "R, ML, Logistic Regression, KNN, Random Forests",
            category: "university"
          },
          {
            title: "Secure Software Development",
            subtitle: "University Project",
            description: "Developed a threat model for an eCommerce platform to identify vulnerabilities and design effective mitigation strategies.",
            technologies: "Threat Modeling, Risk Assessment, Security Standards",
            category: "university"
          },
          {
            title: "Advanced Testing & Quality Assurance",
            subtitle: "University Project",
            description: "Enhanced software quality through manual testing and automated API unit testing with comprehensive bug tracking.",
            technologies: "Manual Testing, API Testing, Bug Tracking",
            category: "university"
          },
          {
            title: "Buffer Injection Analysis",
            subtitle: "University Project",
            description: "Investigated buffer overflow vulnerabilities using penetration testing techniques and implemented security controls.",
            technologies: "Penetration Testing, Security Controls",
            category: "university"
          },
          {
            title: "Collaborative Standard Setting & Assessment",
            subtitle: "CSC3032 Course Project",
            description: "Developed 'EvAs', a platform to streamline standard setting and assessment creation in educational settings through team collaboration.",
            technologies: "Team Collaboration, Software Development",
            category: "university"
          },
          {
            title: "Enhancement of QUBengage Cloud App",
            subtitle: "University Project",
            description: "Enhanced the QUBengage app to monitor student engagement by adding new functionalities and improving systems using cloud and microservices architecture.",
            technologies: "Cloud, Microservices, App Enhancement",
            category: "university"
          },
          {
            title: "Threat Modelling & Risk Management",
            subtitle: "University Project",
            description: "Developed a comprehensive threat model for an eCommerce platform by integrating risk assessment techniques and industry standards.",
            technologies: "Threat Modeling, Risk Management, Security",
            category: "university"
          }
        ]
      },
      github: {
        title: "GitHub Projects",
        description: "Explore my work on GitHub:",
        linkText: "Visit my GitHub Profile"
      },
      // ‚Ä¶inside translations.en‚Ä¶
// ‚Ä¶ inside translations.en ‚Ä¶
experience: {
  title: "Experience",
  past: {
    details: "Software Engineer ‚Äì Rheinmetall Arabia Simulation and Training (RAST)",
    period:  "July 2024 ‚Äì May 2025",
    description: `
      <p>Developed and implemented control software for the RSAF military arresting systems (BAK14 & BAK15) using Kotlin. A PLC simulator was also built in Python for testing.</p>
      <ul>
        <li>Air Compressor: ON / OFF</li>
        <li>Water Discharge: High/Low level with pump status</li>
        <li>Exhaust Fan: ON / OFF</li>
        <li>PIT Temperature & Moisture</li>
        <li>Hydraulic Pressure (BAK15 only): ‚Äú<1900 PSI‚Äù or ‚Äú‚â•2200 PSI‚Äù</li>
        <li>TCP-based, using bit-level command exchange</li>
        <li>Multicast-based, with structured 16- and 32-byte messages</li>
      </ul>
      <p>Daily tasks: designed and developed new features, wrote unit tests, maintained technical documentation, and collaborated with QA and cross-functional teams.</p>
    `
  },
  current: {
    details: "Assistant Analyst Technologies & Solutions Operations at Digital Government Authority",
    period:  "June 2025 ‚Äì Present",
    description: `
      <ul>
        <li>Monitor and optimize performance of digital service platforms, ensuring high availability and swift incident response.</li>
        <li>Configure, deploy, and test new solution modules, collaborating with cross-functional teams to meet stakeholder requirements.</li>
        <li>Analyze operational metrics and prepare technical reports to support continuous improvement.</li>
        <li>Provide second-line support for platform issues, troubleshooting and coordinating with vendors as needed.</li>
        <li>Maintain up-to-date operational documentation and runbooks.</li>
      </ul>
    `
  }
},

      courses: {
        title: "Courses & Events",
        events: [
          "PMP 35 Hour Course (Preparing for Exam)",
          "Professional Java Course",
          "Hackathon by PwC on Diversity",
          "Ultimate Web Development Course"
        ]
      },
      footer: {
        text: "&copy; 2025 Abdulaziz Al-Rabiah. All rights reserved.",
        linkedin: "LinkedIn",
        github: "GitHub"
      }
    },
    ar: {
      nav: {
        home: "ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©",
        about: "ŸÖŸÜ ÿ£ŸÜÿß",
        projects: "ÿßŸÑŸÖÿ¥ÿßÿ±Ÿäÿπ",
        courses: "ÿßŸÑÿØŸàÿ±ÿßÿ™ ŸàÿßŸÑŸÅÿπÿßŸÑŸäÿßÿ™",
        github: "ŸÖÿ¥ÿßÿ±Ÿäÿπ GitHub",
        experience: "ÿßŸÑÿÆÿ®ÿ±ÿßÿ™",
        contact: "ÿ™ŸàÿßÿµŸÑ"
      },
      header: {
        title: "ÿπÿ®ÿØÿßŸÑÿπÿ≤Ÿäÿ≤ ÿßŸÑÿ±ÿ®Ÿäÿπÿ©",
	subtitle: "ŸÖÿ≥ÿßÿπÿØ ŸÖÿ≠ŸÑŸÑ ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ™ŸÇŸÜŸäÿßÿ™ ŸàÿßŸÑÿ≠ŸÑŸàŸÑ ŸÅŸä ŸáŸäÿ¶ÿ© ÿßŸÑÿ≠ŸÉŸàŸÖÿ© ÿßŸÑÿ±ŸÇŸÖŸäÿ© ",
        contact: "üìû +966550480974 | ‚úâÔ∏è abdulaziz_alrabiah@outlook.sa"
      },
      hero: {
        cta: "ÿßÿ≥ÿ™ŸÉÿ¥ŸÅ ÿßŸÑŸÖÿ≤ŸäÿØ",
        downloadCV: "ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿ≥Ÿäÿ±ÿ© ÿßŸÑÿ∞ÿßÿ™Ÿäÿ©"
      },
      about: {
        title: "ŸÖŸÜ ÿ£ŸÜÿß",
        summaryTitle: "ÿßŸÑŸÖŸÑÿÆÿµ",
        summary: "ÿÆŸÑŸÅŸäÿ™Ÿä ÿßŸÑÿ£ŸÉÿßÿØŸäŸÖŸäÿ© ÿßŸÑŸÖÿ™ŸäŸÜÿ© ŸàŸÖŸáÿßÿ±ÿßÿ™Ÿä ÿßŸÑÿ™ŸÇŸÜŸäÿ© ÿ™ŸèŸÖŸÉŸÜŸÜŸä ŸÖŸÜ ÿßŸÑÿ™ŸÅŸàŸÇ ŸÅŸä ÿ®Ÿäÿ¶ÿßÿ™ ÿßŸÑÿπŸÖŸÑ ÿßŸÑÿØŸäŸÜÿßŸÖŸäŸÉŸäÿ© ŸàÿßŸÑÿ™ÿπÿßŸàŸÜŸäÿ©. ÿ£Ÿèÿ≥ÿßŸáŸÖ ŸÅŸä ŸÜÿ¨ÿßÿ≠ ÿßŸÑÿ¥ÿ±ŸÉÿ© ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿ™ÿ∑ÿ®ŸäŸÇ ÿÆÿ®ÿ±ÿ™Ÿä Ÿàÿ™Ÿàÿ≥Ÿäÿπ ŸÇÿØÿ±ÿßÿ™Ÿä ÿ®ÿßÿ≥ÿ™ŸÖÿ±ÿßÿ± ÿπÿ®ÿ± ÿßŸÑÿ™ÿ¨ÿßÿ±ÿ® ÿßŸÑÿπŸÖŸÑŸäÿ© ŸàÿßŸÑŸÖÿ¥ÿßÿ±Ÿäÿπ ÿßŸÑÿ™ÿ≠ÿØŸëŸäÿ© ÿßŸÑÿ™Ÿä ÿ™ÿπÿ≤ÿ≤ ÿßŸÑŸÜŸÖŸà ÿßŸÑÿ¥ÿÆÿµŸä ŸàÿßŸÑŸÖŸáŸÜŸä",
        educationTitle: "ÿßŸÑÿ™ÿπŸÑŸäŸÖ",
        educationText: "<strong>ÿ®ŸÉÿßŸÑŸàÿ±ŸäŸàÿ≥ (ŸÖÿπ ŸÖÿ±ÿ™ÿ®ÿ© ÿßŸÑÿ¥ÿ±ŸÅ) ŸÅŸä ŸáŸÜÿØÿ≥ÿ© ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™</strong> ‚Äì ÿ¨ÿßŸÖÿπÿ© ŸÉŸàŸäŸÜÿ≤ ÿ®ŸÑŸÅÿßÿ≥ÿ™ÿå ",
        educationList: [
          "2021/22: ŸÇŸàÿßÿπÿØ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ÿå ÿßŸÑÿ®ÿ±ŸÖÿ¨ÿ© ÿßŸÑŸÉÿßÿ¶ŸÜŸäÿ©ÿå ŸÖÿ®ÿßÿØÿ¶ ÿ™ÿµŸÖŸäŸÖ ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™ÿå ÿßŸÑÿπŸÖÿßÿ±ÿ© ŸàÿßŸÑÿ¥ÿ®ŸÉÿßÿ™ÿå ÿßŸÑÿ®ÿ±ŸÖÿ¨ÿ© ÿßŸÑÿ•ÿ¨ÿ±ÿßÿ¶Ÿäÿ©",
          "2022/23: ŸáŸÜÿØÿ≥ÿ© Ÿàÿ£ŸÜÿ∏ŸÖÿ© ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™ÿå ŸáŸäÿßŸÉŸÑ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ŸàÿßŸÑÿÆŸàÿßÿ±ÿ≤ŸÖŸäÿßÿ™ÿå ŸÖŸÇÿØŸÖÿ© ŸÅŸä ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä Ÿàÿ™ÿπŸÑŸÖ ÿßŸÑÿ¢ŸÑÿ©ÿå ÿßŸÑÿ®ÿ±ŸÖÿ¨ÿ© ÿßŸÑŸÖŸàÿ¨Ÿáÿ© ŸÑŸÑÿÆÿØŸÖÿßÿ™ÿå ÿßŸÑŸÖŸáÿßÿ±ÿßÿ™ ÿßŸÑŸÖŸáŸÜŸäÿ©",
          "2023/24: ÿßÿÆÿ™ÿ®ÿßÿ± ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™ÿå ŸÖÿ¥ÿ±Ÿàÿπ ŸáŸÜÿØÿ≥ÿ© ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™ÿå ÿßŸÑÿ≠Ÿàÿ≥ÿ®ÿ© ÿßŸÑÿ≥ÿ≠ÿßÿ®Ÿäÿ©ÿå ÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™ ÿßŸÑÿ¢ŸÖŸÜÿ©ÿå ÿßŸÑÿßÿ®ÿ™ŸÉÿßÿ± ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿ© ÿßŸÑÿ¨ŸÖÿßÿπŸä"
        ],
        skillsTitle: "ÿßŸÑŸÖŸáÿßÿ±ÿßÿ™",
        skillsText: "<strong>ÿßŸÑŸÖŸáÿßÿ±ÿßÿ™ ÿßŸÑÿ¥ÿÆÿµŸäÿ©:</strong> ÿßŸÑÿπŸÖŸÑ ÿßŸÑÿ¨ŸÖÿßÿπŸäÿå ÿßŸÑÿ™ŸàÿßÿµŸÑÿå ÿ≠ŸÑ ÿßŸÑŸÖÿ¥ŸÉŸÑÿßÿ™ÿå ÿßŸÑÿ™ŸÅŸÉŸäÿ± ÿßŸÑŸÜŸÇÿØŸä<br /><strong>ÿßŸÑŸÖŸáÿßÿ±ÿßÿ™ ÿßŸÑÿ™ŸÇŸÜŸäÿ©:</strong> ŸàŸäŸÜÿØŸàÿ≤ÿå ŸÉÿßŸÑŸä ŸÑŸäŸÜŸÉÿ≥ÿå ÿ¨ÿßŸÅÿßÿå C++ÿå ÿ®ÿßŸäÿ´ŸàŸÜÿå SQLÿå MySQLÿå HTMLÿå CSSÿå ŸÖÿßŸäŸÉÿ±Ÿàÿ≥ŸàŸÅÿ™ ÿ£ŸàŸÅŸäÿ≥ÿå ŸÅŸäÿ¨ŸÖÿßÿå SQL Serverÿå IntelliJ IDEAÿå Visual Studioÿå Qt Creator",
        interestsTitle: "ÿßŸÑÿßŸáÿ™ŸÖÿßŸÖÿßÿ™",
        interestsText: "ÿ£ŸÜÿß ŸÖÿ™ÿ≠ŸÖÿ≥ ŸÑÿ™ÿ∑ÿ®ŸäŸÇ ÿßŸÑÿ™ŸÉŸÜŸàŸÑŸàÿ¨Ÿäÿß ŸàÿßŸÑÿßÿ®ÿ™ŸÉÿßÿ± ŸÑÿØŸÅÿπ ÿπÿ¨ŸÑÿ© ÿßŸÑÿ™ŸÇÿØŸÖ. ÿ£ÿ™ÿßÿ®ÿπ ÿ£ÿ≠ÿØÿ´ ÿßŸÑÿßÿ™ÿ¨ÿßŸáÿßÿ™ ŸÅŸä ÿßŸÑÿµŸÜÿßÿπÿ© Ÿàÿ£ÿ≥ÿ™ŸÉÿ¥ŸÅ ÿ®ÿßÿ≥ÿ™ŸÖÿ±ÿßÿ± ÿ£ÿØŸàÿßÿ™ Ÿàÿ£ÿ≥ÿßŸÑŸäÿ® ÿ¨ÿØŸäÿØÿ© ŸÑÿ™ÿπÿ≤Ÿäÿ≤ ŸÖŸáÿßÿ±ÿßÿ™Ÿä."
      },
      projects: {
        title: "ÿßŸÑŸÖÿ¥ÿßÿ±Ÿäÿπ",
        filters: {
          all: "ÿßŸÑŸÉŸÑ",
          personal: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¥ÿÆÿµŸä",
          university: "ÿ¨ÿßŸÖÿπŸä",
          military: "ÿ±ÿßŸäŸÜŸÖŸäÿ™ÿßŸÑ ÿßŸÑÿπÿ±ÿ®Ÿäÿ© ŸÑŸÑŸÖÿ≠ÿßŸÉÿßÿ©"
        },
        showMore: "ÿπÿ±ÿ∂ ÿßŸÑŸÖÿ≤ŸäÿØ",
        showLess: "ÿπÿ±ÿ∂ ÿ£ŸÇŸÑ",
        technologiesLabel: "ÿßŸÑÿ™ŸÇŸÜŸäÿßÿ™:",

        projectCards: [
          {
            title: "ŸÜÿ∏ÿßŸÖ ÿßŸÑÿ™ÿ≠ŸÉŸÖ ŸÅŸä ŸÖŸáÿ®ÿ∑ ÿßŸÑÿ∑ÿßÿ¶ÿ±ÿßÿ™",
            subtitle: "ÿ™ÿ∑ÿ®ŸäŸÇ ÿπÿ≥ŸÉÿ±Ÿä",
            description: "ÿ™ŸÖ ÿ™ÿ∑ŸàŸäÿ± Ÿàÿßÿ¨Ÿáÿ© ÿ™ÿ≠ŸÉŸÖ ŸÖÿÆÿµÿµÿ© ŸÑŸÜÿ∏ÿßŸÖ ŸÖŸáÿ®ÿ∑ ÿßŸÑÿ∑ÿßÿ¶ÿ±ÿßÿ™ ÿßŸÑÿπÿ≥ŸÉÿ±Ÿäÿ© ŸÖÿπ ÿ£ÿ∂Ÿàÿßÿ° ÿ≠ÿßŸÑÿ© ÿØŸäŸÜÿßŸÖŸäŸÉŸäÿ© ŸàŸÖÿ±ÿßŸÇÿ®ÿ© ŸÅŸä ÿßŸÑŸàŸÇÿ™ ÿßŸÑÿ≠ŸÇŸäŸÇŸä.",
            technologies: "ŸÉŸàÿ™ŸÑŸäŸÜÿå ÿ£ŸÜÿØÿ±ŸàŸäÿØ ÿ≥ÿ™ŸàÿØŸäŸàÿå ÿ™ÿµŸÖŸäŸÖ ÿßŸÑŸàÿßÿ¨Ÿáÿ©",
            category: "military"
          },
          {
            title: "ÿ™ÿ∑ÿ®ŸäŸÇ ÿßÿÆÿ™ÿ®ÿßÿ± ŸÜÿ∏ÿßŸÖ ÿßŸÑÿ™ÿ≠ŸÉŸÖ ŸÅŸä ŸÖŸáÿ®ÿ∑ ÿßŸÑÿ∑ÿßÿ¶ÿ±ÿßÿ™",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¥ÿÆÿµŸä",
            description: "ÿ™ÿ∑ÿ®ŸäŸÇ ÿ®ÿßŸäÿ´ŸàŸÜ Ÿäÿ™ÿµŸÑ ŸÖŸÜ ÿ≥ÿ∑ÿ≠ ÿßŸÑŸÖŸÉÿ™ÿ® ÿßŸÑŸâ ÿ¨Ÿáÿßÿ≤ ŸÑŸàÿ≠Ÿä ÿÆÿßÿµ ÿ®ŸÜÿ∏ÿßŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ ÿπŸÜ ÿ∑ÿ±ŸäŸÇ ÿπŸÜŸàÿßŸÜ IP ŸÑÿßÿÆÿ™ÿ®ÿßÿ± ŸàŸÖÿ≠ÿßŸÉÿßÿ© ÿ≠ÿßŸÑÿßÿ™ ŸÜÿ∏ÿßŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ Ÿàÿßÿ±ÿ≥ÿßŸÑ ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ± ÿ®ÿßŸÑÿ®ÿßŸäÿ™",
            technologies: "ÿ®ÿßŸäÿ´ŸàŸÜÿå Tkinterÿå PyQt",
            category: "personal"
          },
          {
            title: "ŸÖŸàŸÑÿØ ÿ±ŸÖŸàÿ≤ QR",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¥ÿÆÿµŸä",
            description: "ÿ™ŸÖ ÿ™ÿ∑ŸàŸäÿ± ÿ™ÿ∑ÿ®ŸäŸÇ ŸäŸÇŸàŸÖ ÿ®ÿ•ŸÜÿ¥ÿßÿ°ÿå ÿ™ÿÆÿµŸäÿµÿå ÿ≠ŸÅÿ∏ ŸàŸÖÿ≥ÿ≠ ÿ±ŸÖŸàÿ≤ QR ŸÖÿπ ŸÖÿπÿßŸÑÿ¨ÿ© ÿ£ÿÆÿ∑ÿßÿ° ŸÇŸàŸäÿ© ŸàÿÆŸäÿßÿ±ÿßÿ™ ÿ™ÿÆÿµŸäÿµ ÿØŸäŸÜÿßŸÖŸäŸÉŸäÿ©.",
            technologies: "ÿ®ÿßŸäÿ´ŸàŸÜÿå Tkinter",
            category: "personal"
          },
          {
            title: "ŸÖÿ¥ÿ±Ÿàÿπ ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¨ÿßŸÖÿπŸä",
            description: "ÿ£ÿ∏Ÿáÿ± ÿßŸÑŸÉŸÅÿßÿ°ÿ© ŸÅŸä ÿ•ŸÜÿ¥ÿßÿ° ŸÇÿßÿπÿØÿ© ÿ®ŸäÿßŸÜÿßÿ™ ÿπŸÑÿßÿ¶ŸÇŸäÿ© ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ MySQL ŸÖŸÜ ŸÖÿÆÿ∑ÿ∑ ŸÖŸèÿπÿ∑Ÿâ ŸÖÿπ ÿ™ÿ∑ÿ®ŸäŸÇ ŸÇŸäŸàÿØ ŸÑÿ∂ŸÖÿßŸÜ ÿ≥ŸÑÿßŸÖÿ© ÿßŸÑÿπŸÑÿßŸÇÿßÿ™ Ÿàÿßÿ≥ÿ™Ÿäÿ±ÿßÿØ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ phpMyAdmin.",
            technologies: "MySQL, SQL, phpMyAdmin",
            category: "university"
          },
          {
            title: "ŸÖÿ®ÿßÿØÿ¶ ÿ™ÿµŸÖŸäŸÖ ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¨ŸÖÿßÿπŸä",
            description: "ÿ™ŸÖÿ™ ŸÖÿ≠ÿßŸÉÿßÿ© ŸÜÿ∏ÿßŸÖ ÿ¢ŸÑÿ© ÿ®Ÿäÿπ ŸÖÿπ ÿ£ÿØŸàÿßÿ± ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ŸÖÿÆÿ™ŸÑŸÅÿ© ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÖŸÜŸáÿ¨Ÿäÿßÿ™ ÿ£ÿ¨ÿßŸäŸÑ Ÿàÿ•ÿØÿßÿ±ÿ© ÿ≥ÿ¨ŸÑÿßÿ™ Sprint ŸàProduct Backlog.",
            technologies: "ÿ£ÿ¨ÿßŸäŸÑÿå ÿßŸÑÿπŸÖŸÑ ÿßŸÑÿ¨ŸÖÿßÿπŸäÿå ÿ™ÿµŸÖŸäŸÖ ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™",
            category: "university"
          },
          {
            title: "ŸÖÿ¥ÿ±Ÿàÿπ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä Ÿàÿ™ÿπŸÑŸÖ ÿßŸÑÿ¢ŸÑÿ©",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¨ÿßŸÖÿπŸä",
            description: "ÿ™ŸÖ ÿ™ŸÜŸÅŸäÿ∞ Ÿàÿ™ÿ≠ÿ≥ŸäŸÜ ŸÜŸÖÿßÿ∞ÿ¨ ÿ™ÿπŸÑŸÖ ÿßŸÑÿ¢ŸÑÿ© ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ R ŸÑÿ™ÿµŸÜŸäŸÅ ÿßŸÑÿµŸàÿ± ÿπÿ®ÿ± ÿ™ŸÇŸÜŸäÿßÿ™ ÿßŸÑÿßŸÜÿ≠ÿØÿßÿ± ÿßŸÑŸÑŸàÿ¨ÿ≥ÿ™Ÿäÿå KNNÿå ŸàÿßŸÑÿ∫ÿßÿ®ÿßÿ™ ÿßŸÑÿπÿ¥Ÿàÿßÿ¶Ÿäÿ©.",
            technologies: "Rÿå ÿ™ÿπŸÑŸÖ ÿßŸÑÿ¢ŸÑÿ©ÿå ÿßŸÑÿßŸÜÿ≠ÿØÿßÿ± ÿßŸÑŸÑŸàÿ¨ÿ≥ÿ™Ÿäÿå KNNÿå ÿßŸÑÿ∫ÿßÿ®ÿßÿ™ ÿßŸÑÿπÿ¥Ÿàÿßÿ¶Ÿäÿ©",
            category: "university"
          },
          {
            title: "ÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™ ÿßŸÑÿ¢ŸÖŸÜÿ©",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¨ÿßŸÖÿπŸä",
            description: "ÿ™ŸÖ ÿ™ÿ∑ŸàŸäÿ± ŸÜŸÖŸàÿ∞ÿ¨ ÿ™ŸáÿØŸäÿØ ŸÑŸÖŸÜÿµÿ© ÿßŸÑÿ™ÿ¨ÿßÿ±ÿ© ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸäÿ© ŸÑÿ™ÿ≠ÿØŸäÿØ ÿßŸÑÿ´ÿ∫ÿ±ÿßÿ™ Ÿàÿ™ÿµŸÖŸäŸÖ ÿßÿ≥ÿ™ÿ±ÿßÿ™Ÿäÿ¨Ÿäÿßÿ™ ÿ™ÿÆŸÅŸäŸÅ ŸÅÿπÿßŸÑÿ©.",
            technologies: "ŸÜŸÖÿ∞ÿ¨ÿ© ÿßŸÑÿ™ŸáÿØŸäÿØÿå ÿ™ŸÇŸäŸäŸÖ ÿßŸÑŸÖÿÆÿßÿ∑ÿ±ÿå ŸÖÿπÿßŸäŸäÿ± ÿßŸÑÿ£ŸÖÿßŸÜ",
            category: "university"
          },
          {
            title: "ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ± ÿßŸÑŸÖÿ™ŸÇÿØŸÖ Ÿàÿ∂ŸÖÿßŸÜ ÿßŸÑÿ¨ŸàÿØÿ©",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¨ÿßŸÖÿπŸä",
            description: "ÿ™ŸÖ ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ¨ŸàÿØÿ© ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±ÿßÿ™ ÿßŸÑŸäÿØŸàŸäÿ© ŸàÿßÿÆÿ™ÿ®ÿßÿ±ÿßÿ™ Ÿàÿ≠ÿØÿßÿ™ API ÿßŸÑÿ¢ŸÑŸäÿ© ŸÖÿπ ÿ™ÿ™ÿ®ÿπ ÿ¥ÿßŸÖŸÑ ŸÑŸÑÿ£ÿÆÿ∑ÿßÿ°.",
            technologies: "ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ± ÿßŸÑŸäÿØŸàŸäÿå ÿßÿÆÿ™ÿ®ÿßÿ± APIÿå ÿ™ÿ™ÿ®ÿπ ÿßŸÑÿ£ÿÆÿ∑ÿßÿ°",
            category: "university"
          },
          {
            title: "ÿ™ÿ≠ŸÑŸäŸÑ ÿ≠ŸÇŸÜ ÿßŸÑÿ∞ÿßŸÉÿ±ÿ© ÿßŸÑŸÖÿ§ŸÇÿ™ÿ©",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¨ÿßŸÖÿπŸä",
            description: "ÿ™ŸÖ ÿØÿ±ÿßÿ≥ÿ© ÿ´ÿ∫ÿ±ÿßÿ™ ÿ™ÿ¨ÿßŸàÿ≤ ÿ≥ÿπÿ© ÿßŸÑÿ∞ÿßŸÉÿ±ÿ© ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ™ŸÇŸÜŸäÿßÿ™ ÿßÿÆÿ™ÿ®ÿßÿ± ÿßŸÑÿßÿÆÿ™ÿ±ÿßŸÇ Ÿàÿ™ÿ∑ÿ®ŸäŸÇ ÿ∂Ÿàÿßÿ®ÿ∑ ÿ£ŸÖŸÜŸäÿ© ŸÑŸÖŸÜÿπ ÿßŸÑÿßÿ≥ÿ™ÿ∫ŸÑÿßŸÑ.",
            technologies: "ÿßÿÆÿ™ÿ®ÿßÿ± ÿßŸÑÿßÿÆÿ™ÿ±ÿßŸÇÿå ÿ∂Ÿàÿßÿ®ÿ∑ ÿßŸÑÿ£ŸÖÿßŸÜ",
            category: "university"
          },
          {
            title: "Ÿàÿ∂ÿπ ÿßŸÑŸÖÿπÿßŸäŸäÿ± ÿßŸÑÿ™ÿπÿßŸàŸÜŸä ŸàÿßŸÑÿ™ŸÇŸäŸäŸÖ",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ŸÖŸÇÿ±ÿ± CSC3032",
            description: "ÿ™ŸÖ ÿ™ÿ∑ŸàŸäÿ± ŸÖŸÜÿµÿ© 'EvAs' ŸÑÿ™ÿ®ÿ≥Ÿäÿ∑ ÿπŸÖŸÑŸäÿ© Ÿàÿ∂ÿπ ÿßŸÑŸÖÿπÿßŸäŸäÿ± Ÿàÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑÿ™ŸÇŸäŸäŸÖÿßÿ™ ŸÅŸä ÿßŸÑÿ®Ÿäÿ¶ÿßÿ™ ÿßŸÑÿ™ÿπŸÑŸäŸÖŸäÿ© ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿßŸÑÿ™ÿπÿßŸàŸÜ ÿßŸÑŸàÿ´ŸäŸÇ.",
            technologies: "ÿßŸÑÿ™ÿπÿßŸàŸÜ ÿßŸÑÿ¨ŸÖÿßÿπŸäÿå ÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™",
            category: "university"
          },
          {
            title: "ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ™ÿ∑ÿ®ŸäŸÇ QUBengage ÿßŸÑÿ≥ÿ≠ÿßÿ®Ÿä",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¨ÿßŸÖÿπŸä",
            description: "ÿ™ŸÖ ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ™ÿ∑ÿ®ŸäŸÇ QUBengage ŸÑŸÖÿ±ÿßŸÇÿ®ÿ© ÿ™ŸÅÿßÿπŸÑ ÿßŸÑÿ∑ŸÑÿßÿ® ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿ•ÿ∂ÿßŸÅÿ© Ÿàÿ∏ÿßÿ¶ŸÅ ÿ¨ÿØŸäÿØÿ© Ÿàÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿ£ŸÜÿ∏ŸÖÿ© ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ™ŸÇŸÜŸäÿßÿ™ ÿßŸÑÿ≥ÿ≠ÿßÿ®ÿ© ŸàÿßŸÑŸÖÿπŸÖÿßÿ±Ÿäÿßÿ™ ÿßŸÑŸÇÿßÿ¶ŸÖÿ© ÿπŸÑŸâ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑÿµÿ∫Ÿäÿ±ÿ©.",
            technologies: "ÿßŸÑÿ≥ÿ≠ÿßÿ®ÿ©ÿå ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÖÿµÿ∫ÿ±ÿ©ÿå ÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿ™ÿ∑ÿ®ŸäŸÇÿßÿ™",
            category: "university"
          },
          {
            title: "ŸÜŸÖÿ∞ÿ¨ÿ© ÿßŸÑÿ™ŸáÿØŸäÿØ Ÿàÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸÖÿÆÿßÿ∑ÿ±",
            subtitle: "ŸÖÿ¥ÿ±Ÿàÿπ ÿ¨ÿßŸÖÿπŸä",
            description: "ÿ™ŸÖ ÿ™ÿ∑ŸàŸäÿ± ŸÜŸÖŸàÿ∞ÿ¨ ÿ¥ÿßŸÖŸÑ ŸÑŸÑÿ™ŸáÿØŸäÿØ ŸÑŸÖŸÜÿµÿ© ÿßŸÑÿ™ÿ¨ÿßÿ±ÿ© ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸäÿ© ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿØŸÖÿ¨ ÿ™ŸÇŸÜŸäÿßÿ™ ÿ™ŸÇŸäŸäŸÖ ÿßŸÑŸÖÿÆÿßÿ∑ÿ± ŸàŸÖÿπÿßŸäŸäÿ± ÿßŸÑÿµŸÜÿßÿπÿ©.",
            technologies: "ŸÜŸÖÿ∞ÿ¨ÿ© ÿßŸÑÿ™ŸáÿØŸäÿØÿå ÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸÖÿÆÿßÿ∑ÿ±ÿå ÿßŸÑÿ£ŸÖÿßŸÜ",
            category: "university"
          }
        ]
      },
      github: {
        title: "ŸÖÿ¥ÿßÿ±Ÿäÿπ GitHub",
        description: "ÿßÿ≥ÿ™ÿπÿ±ÿ∂ ÿ£ÿπŸÖÿßŸÑŸä ÿπŸÑŸâ GitHub:",
        linkText: "ÿ≤Ÿäÿßÿ±ÿ© ŸÖŸÑŸÅŸä ÿπŸÑŸâ GitHub"
      },



// ‚Ä¶inside translations.ar‚Ä¶
experience: {
  title: "ÿßŸÑÿÆÿ®ÿ±ÿßÿ™",
  past: {
    details: "ŸÖŸáŸÜÿØÿ≥ ÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™ ‚Äì ÿ¥ÿ±ŸÉÿ© ÿ±ÿßŸäŸÜŸÖŸäÿ™ÿßŸÑ ÿßŸÑÿπÿ±ÿ®Ÿäÿ© ŸÑŸÑŸÖÿ≠ÿßŸÉÿßÿ© ŸàÿßŸÑÿ™ÿØÿ±Ÿäÿ® (RAST)",
    period:  "ŸäŸàŸÑŸäŸà 2024 ‚Äì ŸÖÿßŸäŸà 2025",
    description: `
      <p>ŸÇŸÖÿ™ ÿ®ÿ™ÿ∑ŸàŸäÿ± Ÿàÿ™ŸÜŸÅŸäÿ∞ ÿ®ÿ±ŸÜÿßŸÖÿ¨ ÿ™ÿ≠ŸÉŸÖ ŸÑŸÜÿ∏ÿßŸÖ ÿßŸÑÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿπÿ≥ŸÉÿ±Ÿä (BAK14 Ÿà BAK15) ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Kotlin. ÿ™ŸÖ ÿ£Ÿäÿ∂ÿßŸã ÿ™ÿ∑ŸàŸäÿ± ŸÖÿ≠ÿßŸÉŸä PLC ÿ®ŸÑÿ∫ÿ© Python ŸÑÿßÿÆÿ™ÿ®ÿßÿ± ÿßŸÑŸÜÿ∏ÿßŸÖ.</p>
      <ul>
        <li>ÿßŸÑÿ∂ÿßÿ∫ÿ∑ ÿßŸÑŸáŸàÿßÿ¶Ÿä: ŸäÿπŸÖŸÑ / ŸÖÿ™ŸàŸÇŸÅ</li>
        <li>ÿ™ÿµÿ±ŸäŸÅ ÿßŸÑŸÖŸäÿßŸá: ÿ≠ÿ≥ÿ® ŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑŸÖÿßÿ° Ÿàÿ≠ÿßŸÑÿ© ÿßŸÑŸÖÿ∂ÿÆÿ©</li>
        <li>ŸÖÿ±Ÿàÿ≠ÿ© ÿßŸÑÿπÿßÿØŸÖ: ÿ™ÿπŸÖŸÑ / ŸÖÿ™ŸàŸÇŸÅÿ©</li>
        <li>ÿØÿ±ÿ¨ÿ© ÿßŸÑÿ≠ÿ±ÿßÿ±ÿ© ŸàÿßŸÑÿ±ÿ∑Ÿàÿ®ÿ© ŸÅŸä ÿßŸÑÿ≠ŸÅÿ±ÿ©</li>
        <li>ÿ∂ÿ∫ÿ∑ ÿßŸÑŸáŸäÿØÿ±ŸàŸÑŸäŸÉ (BAK15 ŸÅŸÇÿ∑): ÿ£ŸÇŸÑ ŸÖŸÜ 1900 ÿ£Ÿà ‚â•2200 PSI</li>
        <li>TCP ÿ®ÿßŸÑÿ®ÿ™-level</li>
        <li>Multicast ÿ®ÿ±ÿ≥ÿßÿ¶ŸÑ 16 Ÿà32 ÿ®ÿßŸäÿ™</li>
      </ul>
      <p>ÿßŸÑŸÖŸáÿßŸÖ ÿßŸÑŸäŸàŸÖŸäÿ©: ÿ™ÿµŸÖŸäŸÖ Ÿàÿ™ÿ∑ŸàŸäÿ± ŸÖŸäÿ≤ÿßÿ™ ÿ¨ÿØŸäÿØÿ©ÿå ŸÉÿ™ÿßÿ®ÿ© ÿßÿÆÿ™ÿ®ÿßÿ±ÿßÿ™ ÿßŸÑŸàÿ≠ÿØÿ©ÿå ÿµŸäÿßŸÜÿ© ÿßŸÑŸàÿ´ÿßÿ¶ŸÇ ÿßŸÑÿ™ŸÇŸÜŸäÿ©ÿå ŸàÿßŸÑÿ™ÿπÿßŸàŸÜ ŸÖÿπ ŸÅÿ±ŸÇ ÿ∂ŸÖÿßŸÜ ÿßŸÑÿ¨ŸàÿØÿ© ŸàÿßŸÑŸÅÿ±ŸÇ ŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑÿ™ÿÆÿµÿµÿßÿ™.</p>
    `
  },
  current: {
    details: "ŸÖÿ≥ÿßÿπÿØ ŸÖÿ≠ŸÑŸÑ ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ™ŸÇŸÜŸäÿßÿ™ ŸàÿßŸÑÿ≠ŸÑŸàŸÑ ‚Äì ŸáŸäÿ¶ÿ© ÿßŸÑÿ≠ŸÉŸàŸÖÿ© ÿßŸÑÿ±ŸÇŸÖŸäÿ©",
    period:  "ŸäŸàŸÜŸäŸà 2025 ‚Äì ÿ≠ÿ™Ÿâ ÿßŸÑÿ¢ŸÜ",
    description: `
      <ul>
        <li>ŸÖÿ±ÿßŸÇÿ®ÿ© Ÿàÿ™ÿ≠ÿ≥ŸäŸÜ ÿ£ÿØÿßÿ° ŸÖŸÜÿµÿßÿ™ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑÿ±ŸÇŸÖŸäÿ©ÿå Ÿàÿ∂ŸÖÿßŸÜ ÿßŸÑÿ™ŸàÿßŸÅÿ± ÿßŸÑÿπÿßŸÑŸä ŸàÿßŸÑÿßÿ≥ÿ™ÿ¨ÿßÿ®ÿ© ÿßŸÑÿ≥ÿ±Ÿäÿπÿ© ŸÑŸÑÿ≠ŸàÿßÿØÿ´.</li>
        <li>ÿ™ŸÉŸàŸäŸÜ ŸàŸÜÿ¥ÿ± ŸàÿßÿÆÿ™ÿ®ÿßÿ± Ÿàÿ≠ÿØÿßÿ™ ÿßŸÑÿ≠ŸÑŸë ÿßŸÑÿ¨ÿØŸäÿØÿ©ÿå ÿ®ÿßŸÑÿ™ÿπÿßŸàŸÜ ŸÖÿπ ŸÅÿ±ŸÇ ŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑÿ™ÿÆÿµÿµÿßÿ™ ŸÑÿ™ŸÑÿ®Ÿäÿ© ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿ£ÿµÿ≠ÿßÿ® ÿßŸÑŸÖÿµŸÑÿ≠ÿ©.</li>
        <li>ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑŸÖŸÇÿßŸäŸäÿ≥ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑŸäÿ© Ÿàÿ•ÿπÿØÿßÿØ ÿßŸÑÿ™ŸÇÿßÿ±Ÿäÿ± ÿßŸÑŸÅŸÜŸäÿ© ŸÑÿØÿπŸÖ ÿßŸÑÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑŸÖÿ≥ÿ™ŸÖÿ±.</li>
        <li>ÿ™ŸÇÿØŸäŸÖ ÿßŸÑÿØÿπŸÖ ÿßŸÑŸÅŸÜŸä ŸÖŸÜ ÿßŸÑŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑÿ´ÿßŸÜŸä ŸÑŸÖÿ¥ŸÉŸÑÿßÿ™ ÿßŸÑŸÖŸÜÿµÿ©ÿå Ÿàÿßÿ≥ÿ™ŸÉÿ¥ÿßŸÅ ÿßŸÑÿ£ÿÆÿ∑ÿßÿ° Ÿàÿ•ÿµŸÑÿßÿ≠Ÿáÿß ŸàÿßŸÑÿ™ŸÜÿ≥ŸäŸÇ ŸÖÿπ ÿßŸÑÿ®ÿßÿ¶ÿπŸäŸÜ ÿπŸÜÿØ ÿßŸÑÿ≠ÿßÿ¨ÿ©.</li>
        <li>ÿßŸÑÿ≠ŸÅÿßÿ∏ ÿπŸÑŸâ Ÿàÿ´ÿßÿ¶ŸÇ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ ŸàÿßŸÑÿ•ÿ±ÿ¥ÿßÿØÿßÿ™ (Runbooks) ŸÖÿ≠ÿØÿ´ÿ©.</li>
      </ul>
    `
  }
},
// ‚Ä¶continue with footer, etc‚Ä¶


      courses: {
        title: "ÿßŸÑÿØŸàÿ±ÿßÿ™ ŸàÿßŸÑŸÅÿπÿßŸÑŸäÿßÿ™",
        events: [
          "ÿØŸàÿ±ÿ© 35 ÿ≥ÿßÿπÿ© PMP (ÿ™ÿ≠ÿ∂Ÿäÿ± ŸÑŸÑÿßŸÖÿ™ÿ≠ÿßŸÜ)",
          "ÿØŸàÿ±ÿ© ÿ¨ÿßŸÅÿß ÿßÿ≠ÿ™ÿ±ÿßŸÅŸäÿ©",
          "ŸáÿßŸÉÿßÿ´ŸàŸÜ PwC ÿ≠ŸàŸÑ ÿßŸÑÿ™ŸÜŸàÿπ",
          "ÿØŸàÿ±ÿ© ÿ™ÿ∑ŸàŸäÿ± ÿßŸÑŸàŸäÿ® ÿßŸÑŸÜŸáÿßÿ¶Ÿäÿ©"
        ]
      },
      footer: {
        text: "&copy; 2025 ÿπÿ®ÿØÿßŸÑÿπÿ≤Ÿäÿ≤ ÿßŸÑÿ±ÿ®Ÿäÿπÿ©. ÿ¨ŸÖŸäÿπ ÿßŸÑÿ≠ŸÇŸàŸÇ ŸÖÿ≠ŸÅŸàÿ∏ÿ©.",
        linkedin: "LinkedIn",
        github: "GitHub"
      }
    }
  };

  let currentLang = localStorage.getItem("language") || "en";
  const initialVisibleCount = 6;
  let projectsExpanded = false;

  // Helper: Retrieve nested translation by key
  const getNestedTranslation = (obj, key) =>
    key.split('.').reduce((o, i) => (o ? o[i] : null), obj);

  // Update page translations and document language/direction
  const translatePage = lang => {
    document.querySelectorAll('[data-i18n]').forEach(el => {
      const key = el.getAttribute('data-i18n');
      const translation = getNestedTranslation(translations[lang], key);
      if (translation) el.innerHTML = translation;
    });
    document.documentElement.lang = lang;
    document.body.setAttribute("dir", lang === "ar" ? "rtl" : "ltr");
  };

  // Render Education List
  const renderEducationList = lang => {
    const ul = document.getElementById('education-list');
    ul.innerHTML = "";
    translations[lang].about.educationList.forEach(item => {
      const li = document.createElement('li');
      li.innerHTML = item;
      ul.appendChild(li);
    });
  };

  // Render Projects Grid
  const renderProjects = lang => {
    const grid = document.getElementById('projects-grid');
    grid.innerHTML = "";
    const projects = translations[lang].projects.projectCards;
    projects.forEach((project, index) => {
      const card = document.createElement('div');
      card.className = 'project-card';
      card.setAttribute('data-category', project.category);
      const techLabel = getNestedTranslation(translations[lang], 'projects.technologiesLabel');
      card.innerHTML = `
        <h3>${project.title}</h3>
        <p><em>${project.subtitle}</em></p>
        <p>${project.description}</p>
        <p><strong>${techLabel}</strong> ${project.technologies}</p>
      `;
      if (!projectsExpanded && index >= initialVisibleCount) {
        card.classList.add("hidden");
      }
      grid.appendChild(card);
    });
    const toggleBtn = document.getElementById('toggle-projects');
    if (projects.length <= initialVisibleCount) {
      toggleBtn.style.display = 'none';
    } else {
      toggleBtn.style.display = 'block';
      toggleBtn.innerHTML = projectsExpanded 
        ? getNestedTranslation(translations[currentLang], 'projects.showLess')
        : getNestedTranslation(translations[currentLang], 'projects.showMore');
    }
  };

  // Render Courses List
  const renderCourses = lang => {
    const ul = document.getElementById('courses-list');
    ul.innerHTML = "";
    translations[lang].courses.events.forEach(course => {
      const li = document.createElement('li');
      li.innerHTML = course;
      ul.appendChild(li);
    });
  };

  // Initialize Scroll Reveal via Intersection Observer
  const initScrollReveal = () => {
    const revealElements = document.querySelectorAll('.reveal');
    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('in-view');
        }
      });
    }, { threshold: 0.2 });
    revealElements.forEach(el => observer.observe(el));
  };

  // Theme Toggle Function ‚Äì switches between light and dark themes
  const toggleTheme = () => {
    const currentTheme = document.documentElement.getAttribute("data-theme");
    const newTheme = currentTheme === "light" ? "dark" : "light";
    document.documentElement.setAttribute("data-theme", newTheme);
    localStorage.setItem("theme", newTheme);
  };

  const initTheme = () => {
  // Force dark mode every time by ignoring any saved theme:
  const savedTheme = localStorage.getItem("theme") || "dark";
  document.documentElement.setAttribute("data-theme", savedTheme);
};


  // Initialize Particle Animation for the hero section
  const initParticles = () => {
    const canvas = document.getElementById('particle-canvas');
    let mouseX = null;
    let mouseY = null;
    window.addEventListener('mousemove', (e) => {
      const rect = canvas.getBoundingClientRect();
      mouseX = e.clientX - rect.left;
      mouseY = e.clientY - rect.top;
    });

    if (!canvas) return;
    const ctx = canvas.getContext('2d');
    let particlesArray = [];
    const numberOfParticles = 150;
    const heroSection = document.getElementById('hero');

    const resizeCanvas = () => {
      canvas.width = heroSection.offsetWidth;
      canvas.height = heroSection.offsetHeight;
    };

    resizeCanvas();
    let resizeTimeout;
    window.addEventListener('resize', () => {
      clearTimeout(resizeTimeout);
      resizeTimeout = setTimeout(resizeCanvas, 200);
    });

    class Particle {
      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.radius = Math.random() * 2 + 1;
        this.vx = (Math.random() - 0.5) * 0.3;
        this.vy = (Math.random() - 0.5) * 0.3;
      }
      draw() {
        const isDark = document.documentElement.getAttribute("data-theme") === "dark";
        const alpha = 0.3 + Math.random() * 0.2;
        ctx.fillStyle = isDark
          ? `rgba(100,100,100,${alpha})`
          : `rgba(210,180,140,${alpha})`;
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
        ctx.fill();
      }
      
      update() {
        if (this.x + this.radius > canvas.width || this.x - this.radius < 0) this.vx = -this.vx;
        if (this.y + this.radius > canvas.height || this.y - this.radius < 0) this.vy = -this.vy;
        this.x += this.vx;
        this.y += this.vy;
        
        // Mouse interaction: gentler repulsion from the cursor
        if (mouseX !== null && mouseY !== null) {
          const dx = this.x - mouseX;
          const dy = this.y - mouseY;
          const distance = Math.sqrt(dx * dx + dy * dy);
          const minDistance = 80;
          if (distance < minDistance) {
            const force = (minDistance - distance) / minDistance;
            // Lower multiplier for a gentler effect
            this.vx += (dx / distance) * force * 0.05;
            this.vy += (dy / distance) * force * 0.05;
          }
        }
        
        this.draw();
      }
      
      
    }

    const initParticlesArray = () => {
      particlesArray = [];
      for (let i = 0; i < numberOfParticles; i++) {
        particlesArray.push(new Particle());
      }
    };

    const animateParticles = () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      particlesArray.forEach(particle => particle.update());
      requestAnimationFrame(animateParticles);
    };
    
    

    initParticlesArray();
    animateParticles();
  };

  // Initialize Language & Render Content
  const initLanguage = () => {
    translatePage(currentLang);
    renderEducationList(currentLang);
    renderProjects(currentLang);
    renderCourses(currentLang);
    document.getElementById("toggle-lang").innerHTML = currentLang === 'en' ? "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©" : "English";
  };

  // DOMContentLoaded ‚Äì Initialize everything
  document.addEventListener("DOMContentLoaded", () => {
    window.addEventListener("load", () => {
      const preloader = document.getElementById("preloader");
      preloader.style.opacity = 0;
      setTimeout(() => {
        preloader.style.display = "none";
      }, 500);
    });
    

    initTheme();
    initLanguage();
    initParticles();
    initScrollReveal();

    const modal = document.getElementById('project-modal');
   const modalDetails = document.getElementById('modal-details');
    const closeButton = document.querySelector('.close-button');

    // Attach click event to each project card
  document.querySelectorAll('.project-card').forEach(card => {
    card.addEventListener('click', () => {
      // Populate modal with the card's inner HTML (or customize with project data)
      modalDetails.innerHTML = card.innerHTML;
      modal.style.display = 'flex';
    });
  });
  
  // Close modal when clicking the close button
  closeButton.addEventListener('click', () => {
    modal.style.display = 'none';
  });
  
  // Close modal when clicking outside the modal content
  window.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.style.display = 'none';
    }
  });
    
    // Theme Toggle Button Event Listener
    document.getElementById("theme-toggle-btn").addEventListener("click", toggleTheme);

    // Language Toggle Button
    document.getElementById("toggle-lang").addEventListener('click', () => {
      currentLang = currentLang === 'en' ? 'ar' : 'en';
      localStorage.setItem("language", currentLang);
      translatePage(currentLang);
      renderEducationList(currentLang);
      renderProjects(currentLang);
      renderCourses(currentLang);
      document.getElementById("toggle-lang").innerHTML = currentLang === 'en' ? "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©" : "English";
    });

    // Project Filtering
    document.querySelectorAll('.filter-btn').forEach(button => {
      button.addEventListener('click', () => {
        const filter = button.getAttribute('data-filter');
        document.querySelectorAll('.project-card').forEach(card => {
          card.style.display = (filter === 'all' || card.getAttribute('data-category') === filter) ? "block" : "none";
        });
      });
    });

    // Toggle Projects Expansion/Collapse
    document.getElementById('toggle-projects').addEventListener('click', () => {
      projectsExpanded = !projectsExpanded;
      renderProjects(currentLang);
    });

    // Smooth Scrolling for Navigation Links
    document.querySelectorAll('nav ul li a').forEach(link => {
      link.addEventListener('click', e => {
        e.preventDefault();
        const targetId = link.getAttribute('href').substring(1);
        const targetSection = document.getElementById(targetId);
        targetSection.scrollIntoView({ behavior: 'smooth' });
      });
    });

    // Cursor Tail Effect
    const cursorTail = document.getElementById('cursor-tail');
    let targetX = window.innerWidth / 2, targetY = window.innerHeight / 2;
    let tailX = targetX, tailY = targetY;

    document.addEventListener('mousemove', (e) => {
    targetX = e.clientX;
    targetY = e.clientY;
    });

    function animateCursorTail() {
    tailX += (targetX - tailX) * 0.1;
    tailY += (targetY - tailY) * 0.1;
    cursorTail.style.transform = `translate(${tailX}px, ${tailY}px)`;
    requestAnimationFrame(animateCursorTail);
    }
    animateCursorTail();
// Back-to-Top Button Functionality
const backToTop = document.getElementById('back-to-top');
window.addEventListener('scroll', () => {
  if (window.scrollY > 200) {
    backToTop.classList.add('show');
  } else {
    backToTop.classList.remove('show');
  }
});

backToTop.addEventListener('click', () => {
  window.scrollTo({ top: 0, behavior: 'smooth' });
});

function typeWriterEffect() {
  const headline = document.getElementById("hero-headline");
  const fullText = headline.textContent;
  headline.textContent = "";
  let i = 0;
  const speed = 150; // milliseconds per character
  const timer = setInterval(() => {
    if (i < fullText.length) {
      headline.textContent += fullText.charAt(i);
      i++;
    } else {
      clearInterval(timer);
    }
  }, speed);
}
typeWriterEffect();

// Animate Skill Progress Bars on scroll
const skillProgressBars = document.querySelectorAll('.progress');
const progressObserver = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      const percentage = entry.target.getAttribute('data-percentage');
      entry.target.style.width = percentage + '%';
      progressObserver.unobserve(entry.target);
    }
  });
}, { threshold: 0.5 });

skillProgressBars.forEach(bar => {
  progressObserver.observe(bar);
});

// Scroll Progress Indicator
const scrollProgress = document.getElementById('scroll-progress');
window.addEventListener('scroll', () => {
  const scrollTop = window.scrollY;
  const docHeight = document.documentElement.scrollHeight - window.innerHeight;
  const progress = (scrollTop / docHeight) * 100;
  scrollProgress.style.width = progress + '%';
});

  });
})();
